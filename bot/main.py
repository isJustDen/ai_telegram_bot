import os
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ConversationHandler, MessageHandler, Updater, \
	CallbackContext, ContextTypes, filters

from bot.ai_core import analyze_sentiment

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()
TOKEN = os.getenv('BOT_TOKEN')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context:ContextTypes.DEFAULT_TYPE) -> None:
	await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ ü§ñ")

# –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫: –∞–Ω–∞–ª–∏–∑ –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
async def analyze(update:Update, context:ContextTypes.DEFAULT_TYPE) -> None:
	user_text = update.message.text
	responce = analyze_sentiment(user_text)
	await update.message.reply_text(responce)

#—Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
if __name__ == '__main__':
	app = ApplicationBuilder().token(TOKEN).build()

	# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /start
	app.add_handler(CommandHandler('start', start))

	app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, analyze))
	print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...')
	app.run_polling()